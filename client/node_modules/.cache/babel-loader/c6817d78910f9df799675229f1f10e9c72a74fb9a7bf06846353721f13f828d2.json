{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\chatbot 4\\\\client\\\\src\\\\ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatBox() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const chatEndRef = useRef(null);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    const loadingMessage = {\n      text: \"Typing...\",\n      sender: \"bot\",\n      loading: true\n    };\n    setMessages(prev => [...prev, loadingMessage]);\n    try {\n      const res = await fetch(\"http://localhost:5000/api/gemini\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await res.json();\n      setMessages(prev => prev.filter(m => !m.loading));\n      setMessages(prev => [...prev, {\n        text: data.reply,\n        sender: \"bot\"\n      }]);\n    } catch (err) {\n      setMessages(prev => prev.filter(m => !m.loading));\n      setMessages(prev => [...prev, {\n        text: \"Error connecting to AI.\",\n        sender: \"bot\"\n      }]);\n    }\n  };\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}-message`,\n        children: msg.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === \"Enter\" && sendMessage(),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBox, \"N41AS/jIUug2JEztkbiLLgxxKIg=\");\n_c = ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ChatBox","_s","messages","setMessages","input","setInput","chatEndRef","sendMessage","trim","userMessage","text","sender","prev","loadingMessage","loading","res","fetch","method","headers","body","JSON","stringify","message","data","json","filter","m","reply","err","_chatEndRef$current","current","scrollIntoView","behavior","className","children","map","msg","idx","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","value","onChange","e","target","onKeyPress","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/chatbot 4/client/src/ChatBox.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nexport default function ChatBox() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const chatEndRef = useRef(null);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = { text: input, sender: \"user\" };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    const loadingMessage = { text: \"Typing...\", sender: \"bot\", loading: true };\n    setMessages(prev => [...prev, loadingMessage]);\n    try {\n      const res = await fetch(\"http://localhost:5000/api/gemini\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ message: input })\n      });\n      const data = await res.json();\n      setMessages(prev => prev.filter(m => !m.loading));\n      setMessages(prev => [...prev, { text: data.reply, sender: \"bot\" }]);\n    } catch (err) {\n      setMessages(prev => prev.filter(m => !m.loading));\n      setMessages(prev => [...prev, { text: \"Error connecting to AI.\", sender: \"bot\" }]);\n    }\n  };\n  useEffect(() => { chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" }); }, [messages]);\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-box\">\n        {messages.map((msg, idx) => (\n          <div key={idx} className={`message ${msg.sender}-message`}>{msg.text}</div>\n        ))}\n        <div ref={chatEndRef}></div>\n      </div>\n      <div className=\"chat-input\">\n        <input type=\"text\" value={input} onChange={e => setInput(e.target.value)}\n          onKeyPress={e => e.key === \"Enter\" && sendMessage()} placeholder=\"Type a message...\" />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}